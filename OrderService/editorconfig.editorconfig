# Apply to entire solution
root = true

# -------- Core (C#) --------
[*.cs]
indent_style = space
indent_size = 4
tab_width = 4
end_of_line = crlf
insert_final_newline = false

# Keep your existing code-style preferences (short list of the important ones)
dotnet_style_predefined_type_for_locals_parameters_members = true
dotnet_style_predefined_type_for_member_access = true
dotnet_style_object_initializer = true
dotnet_style_collection_initializer = true
dotnet_style_null_propagation = true
dotnet_style_coalesce_expression = true
dotnet_style_prefer_auto_properties = true
dotnet_style_prefer_simplified_boolean_expressions = true
dotnet_style_namespace_match_folder = true
dotnet_style_operator_placement_when_wrapping = beginning_of_line

csharp_prefer_braces = true:silent
csharp_using_directive_placement = outside_namespace:silent
csharp_style_namespace_declarations = file_scoped:silent
csharp_style_prefer_primary_constructors = true:suggestion
csharp_style_prefer_simple_using_statement = true
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_expression_bodied_properties = true
csharp_style_expression_bodied_accessors = true
csharp_style_expression_bodied_methods = false:silent

# -------- Naming: SYMBOL SETS --------
# Types (classes/structs/interfaces/enums)
dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = *
dotnet_naming_symbols.types.required_modifiers = *

# Non-field members (properties, methods, events)
dotnet_naming_symbols.non_field_members.applicable_kinds = property, method, event
dotnet_naming_symbols.non_field_members.applicable_accessibilities = *
dotnet_naming_symbols.non_field_members.required_modifiers = *

# Interfaces
dotnet_naming_symbols.interfaces.applicable_kinds = interface
dotnet_naming_symbols.interfaces.applicable_accessibilities = *
dotnet_naming_symbols.interfaces.required_modifiers = *

# Parameters
dotnet_naming_symbols.parameters.applicable_kinds = parameter
dotnet_naming_symbols.parameters.applicable_accessibilities = *
dotnet_naming_symbols.parameters.required_modifiers = *

# Locals
dotnet_naming_symbols.locals.applicable_kinds = local
dotnet_naming_symbols.locals.applicable_accessibilities = *
dotnet_naming_symbols.locals.required_modifiers = *

# Private fields (all private fields)
dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private
dotnet_naming_symbols.private_fields.required_modifiers = *

# Constants (const fields)
dotnet_naming_symbols.constants.applicable_kinds = field
dotnet_naming_symbols.constants.applicable_accessibilities = *
dotnet_naming_symbols.constants.required_modifiers = const

# -------- Naming: STYLES --------
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.camel_case.capitalization = camel_case

# _camelCase for private fields
dotnet_naming_style._camel_case.capitalization = camel_case
dotnet_naming_style._camel_case.required_prefix = _

# Interface names start with 'I' + PascalCase
dotnet_naming_style.begins_with_i.capitalization = pascal_case
dotnet_naming_style.begins_with_i.required_prefix = I

# -------- Naming: RULES (all set to error) --------
# Types: PascalCase
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case
dotnet_naming_rule.types_should_be_pascal_case.severity = error

# Non-field members (properties/methods/events): PascalCase
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case
dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = error

# Interfaces: begin with I
dotnet_naming_rule.interfaces_should_begin_with_i.symbols = interfaces
dotnet_naming_rule.interfaces_should_begin_with_i.style = begins_with_i
dotnet_naming_rule.interfaces_should_begin_with_i.severity = error

# Parameters: camelCase
dotnet_naming_rule.parameters_should_be_camel_case.symbols = parameters
dotnet_naming_rule.parameters_should_be_camel_case.style = camel_case
dotnet_naming_rule.parameters_should_be_camel_case.severity = error

# Locals: camelCase
dotnet_naming_rule.locals_should_be_camel_case.symbols = locals
dotnet_naming_rule.locals_should_be_camel_case.style = camel_case
dotnet_naming_rule.locals_should_be_camel_case.severity = error

# Private fields: _camelCase
dotnet_naming_rule.private_fields_should_be__camel_case.symbols = private_fields
dotnet_naming_rule.private_fields_should_be__camel_case.style = _camel_case
dotnet_naming_rule.private_fields_should_be__camel_case.severity = warning

# Constants: PascalCase (as per .NET conventions)
dotnet_naming_rule.constants_should_be_pascal_case.symbols = constants
dotnet_naming_rule.constants_should_be_pascal_case.style = pascal_case
dotnet_naming_rule.constants_should_be_pascal_case.severity = error
csharp_prefer_simple_using_statement = true:suggestion
csharp_style_prefer_top_level_statements = true:silent
csharp_prefer_system_threading_lock = true:suggestion
csharp_style_expression_bodied_constructors = false:silent
csharp_indent_labels = one_less_than_current
csharp_style_expression_bodied_operators = false:silent
csharp_space_around_binary_operators = before_and_after

[*.{cs,vb}]
dotnet_style_operator_placement_when_wrapping = beginning_of_line
tab_width = 4
indent_size = 4
end_of_line = crlf